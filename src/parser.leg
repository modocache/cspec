
%{
  #include "cspec.h"

  #define YYSTYPE char *

  #define DUP yy = strdup(yytext)
  
  #define OUT printf("%s", yytext)
  
  #define YY_INPUT(buf, result, max_size) { \
      int yyc = getc(stdin); \
      result = (EOF == yyc) ? 0 : (*(buf) = yyc, 1); \
      yyprintf((stderr, "<%c>", yyc)); \
    }
    
  #define SUITE(S) \
    printf("Suite *suite_%d = Suite_new(%s);\n", nsuites++, S);
    
  #define SPEC(S) \
    printf("Block *block_%d = Block_new(blockTypeSpec, %s, &block_%s_callback);\n", nblocks++, S, S); \
    printf("Suite_push_block(suite_%d, block_%d);\n", nsuites, nblocks);
  
  static int nsuites = 0;
  static int nblocks = 0;
    
%}

  main         = suite
               | < . >                                    { OUT }
               
  suite        = 'description' s a:string                 { SUITE(a) }
                                                         
  string       = < '\'' (!'\'' .)* '\'' >                 { DUP }
               | < '"' (!'"' .)* '"' >                    { DUP }

  end          = 'end'                                    
  EOL          = nl | EOF                                
  EOF          = !.                                      
  nl           = '\n' | '\r\n' | '\r'                    
  s            = [ \t]+                                  
  -            = [ \t]*                                  
                                                         
%%

int main() {
  while (YYPARSE()) ;
  return 0;
}